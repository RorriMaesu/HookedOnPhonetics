rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Development mode - comment out for production
    match /{document=**} {
      allow read, write: if true;
    }

    // Production rules - uncomment for production
    /*
    // Allow authenticated users to read and write only their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // User skills (for BKT model)
      match /skills/{skillId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // User progress data
      match /progress/{progressId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // User reading records
      match /readings/{readingId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }

    // User settings
    match /settings/{settingId} {
      allow read, write: if request.auth != null && request.auth.uid == resource.data.userId;
    }

    // Shared educational content (read-only for authenticated users)
    match /content/{contentId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can write (handled through Firebase Admin SDK)
    }

    // Skills (for BKT model, read-only for users)
    match /skills/{skillId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can modify skills (via Admin SDK)
    }

    // Lessons (read-only for users)
    match /lessons/{lessonId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can modify lessons (via Admin SDK)
    }

    // Passages (read-only for users)
    match /passages/{passageId} {
      allow read: if request.auth != null;
      allow write: if false; // Only admins can modify passages (via Admin SDK)
    }

    // Events (for analytics)
    match /events/{eventId} {
      allow read: if false; // Only accessible via Admin SDK
      allow create: if request.auth != null; // Users can create events
      allow update, delete: if false; // Events should be immutable
    }

    // Admin users can read and write all data
    match /{document=**} {
      allow read, write: if request.auth != null &&
        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }
    */
  }
}
